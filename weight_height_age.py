# -*- coding: utf-8 -*-
"""weight_height_age.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f8zUPYMBUAQNnUTnx7A0osf0VYp5a2bt
"""



"""WEIGHT PREDICTION THROUGH AGE GENDER AND HEIGHT"""

import pandas as pd
import numpy as np

data = pd.read_csv("/content/weight-height.csv")

data.head()

data.shape

data.info()

data.describe()

data.isnull().sum()

#label encoding( will convert the object value of gender to 0 or 1)
from sklearn.preprocessing import LabelEncoder

#created an object for labelEncoder function
encoder= LabelEncoder()

#fit_transform will help in transforming the gender row in numerical value
data["Gender"] = encoder.fit_transform(data["Gender"])

#male=1, female=0
data.head()

#how many male and females
data["Gender"].value_counts()

import seaborn as sns

sns.countplot(x=(data["Gender"]), data=data)

#splitting the data
#as we dont needed weight in x variable we droped it and put it in y variable
x=data.drop(columns="Weight", axis=1)
y=data["Weight"]

x

y

from sklearn.model_selection import train_test_split
x_train ,x_test,y_train,y_test= train_test_split(x,y,test_size=0.2,random_state=0)

x.shape, x_train.shape, x_test.shape

#model creation
from sklearn.linear_model import LinearRegression

model = LinearRegression()

model.fit(x_train, y_train)

prediction= model.predict(x_test)

from sklearn.metrics import r2_score

score= r2_score(prediction, y_test)

score

#building predictive system
new_data=[[0,74]] #(gender,height(inches))
weight= model.predict(new_data)
print(weight) # in pounds
print(weight*0.45)  # in kg